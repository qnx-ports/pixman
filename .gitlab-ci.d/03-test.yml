# Test stage
#
# This stage executes the test suite for pixman for all architectures in
# different configurations. Build and test is split, as some architectures can
# have different QEMU configuration or have multiple supported pixman backends,
# which are executed as job matrix.
#
# Mind that `PIXMAN_ENABLE` variable in matrix runs does nothing, but it looks
# better in CI to indicate what is actually being tested.
#
# Some emulated targets are really slow or cannot be run in multithreaded mode
# (e.g., arm:v5), thus it's required to increase the timeout for them.
#
# Some jobs have `--gcov-ignore-parse-errors`, and `MESON_TESTTHREADS=1`
# specified. It prevents gcovr failing in case of negative counter warning for
# platforms which don't support atomic profile update. Because of that, some
# results might be not 100% correct but, still, it's better to include them in
# the final coverage report, as it's not really important how many times given
# line is hit, but that it's hit at all.

variables:
  # Used in summary stage as well.
  COVERAGE_OUT_DIR: ${BUILD_DIR}/coverage
  COVERAGE_HTML_OUT_DIR: ${COVERAGE_OUT_DIR}/html

.test:all:
  stage: test
  variables:
    TEST_TIMEOUT_MULTIPLIER: 20
    TEST_NAME: ""  # Allow to specify a set of tests to run with run variables.
  script:
    - meson test -C ${BUILD_DIR} -t ${TEST_TIMEOUT_MULTIPLIER}
        --no-rebuild ${TEST_NAME}

# Code coverage targets.

.codecov-test:linux:
  extends: .test:all
  after_script:
    - mkdir -p ${COVERAGE_OUT_DIR} ${COVERAGE_HTML_OUT_DIR}
    - gcovr ${QCOVR_FLAGS} -r ./ ${BUILD_DIR} -e ./subprojects
        --json ${COVERAGE_OUT_DIR}/coverage-${CI_JOB_ID}.json
        --html-details ${COVERAGE_HTML_OUT_DIR}/coverage.html
        --print-summary
  artifacts:
    paths:
      - ${COVERAGE_OUT_DIR}/
    reports:
      junit: ${BUILD_DIR}/meson-logs/testlog.junit.xml

codecov-test:linux:386:
  extends:
    - .codecov-test:linux
    - .codecov:linux:386
  needs:
    - codecov-build:linux:386
  parallel:
    matrix:
      - PIXMAN_ENABLE: ["mmx"]
        PIXMAN_DISABLE: ["sse2 ssse3"]
      - PIXMAN_ENABLE: ["sse2"]
        PIXMAN_DISABLE: ["mmx ssse3"]
      - PIXMAN_ENABLE: ["ssse3"]
        PIXMAN_DISABLE: ["mmx sse2"]

codecov-test:linux:amd64:
  extends:
    - .codecov-test:linux
    - .codecov:linux:amd64
  needs:
    - codecov-build:linux:amd64
  parallel:
    matrix:
      - PIXMAN_DISABLE:
        - ""
        - "fast"
        - "wholeops"

codecov-test:linux:arm:v5:
  extends:
    - .codecov-test:linux
    - .codecov:linux:arm:v5
  needs:
    - codecov-build:linux:arm:v5
  timeout: 3h
  variables:
    TEST_TIMEOUT_MULTIPLIER: 40
    PIXMAN_DISABLE: "arm-neon arm-iwmmxt"  # Test only arm-simd.
    MESON_TESTTHREADS: 1
    QCOVR_FLAGS: --gcov-ignore-parse-errors

codecov-test:linux:arm:v7:
  extends:
    - .codecov-test:linux
    - .codecov:linux:arm:v7
  needs:
    - codecov-build:linux:arm:v7

codecov-test:linux:arm64:v8:
  extends:
    - .codecov-test:linux
    - .codecov:linux:arm64:v8
  needs:
    - codecov-build:linux:arm64:v8

codecov-test:linux:mips64el:
  extends:
    - .codecov-test:linux
    - .codecov:linux:mips64el
  needs:
    - codecov-build:linux:mips64el
  variables:
    # Testing only loongson-mmi. Needs to be explicitly disabled due to
    # CI_HAS_ALL_MIPS_CPU_FEATURES.
    PIXMAN_DISABLE: "mips-dspr2"

codecov-test:linux:mipsel:
  extends:
    - .codecov-test:linux
    - .codecov:linux:mipsel
  needs:
    - codecov-build:linux:mipsel
  timeout: 2h
  variables:
    MESON_TESTTHREADS: 1
    QCOVR_FLAGS: --gcov-ignore-parse-errors

codecov-test:linux:ppc64le:
  extends:
    - .codecov-test:linux
    - .codecov:linux:ppc64le
  needs:
    - codecov-build:linux:ppc64le

codecov-test:linux:riscv64:
  extends:
    - .codecov-test:linux
    - .codecov:linux:riscv64
  needs:
    - codecov-build:linux:riscv64
  parallel:
    matrix:
      # Test correctness for different VLENs.
      - QEMU_CPU:
          - rv64,v=true,vext_spec=v1.0,vlen=128,elen=64
          - rv64,v=true,vext_spec=v1.0,vlen=256,elen=64
          - rv64,v=true,vext_spec=v1.0,vlen=512,elen=64
          - rv64,v=true,vext_spec=v1.0,vlen=1024,elen=64
  allow_failure: true  # Stress test fails due to not enough RAM
  variables:
    MESON_TESTTHREADS: 1

# Platform coverage targets.

pltcov-test:linux:mips:
  extends:
    - .test:all
    - .pltcov:linux:mips
  needs:
    - job: pltcov-build:linux
      parallel:
        matrix:
          - PLATFORM: linux-mips
  allow_failure: true  # Some tests seem to fail.
  retry: 0

pltcov-test:linux:ppc:
  extends:
    - .test:all
    - .pltcov:linux:ppc
  needs:
    - job: pltcov-build:linux
      parallel:
        matrix:
          - PLATFORM: linux-ppc
  allow_failure: true  # SIGILL for some tests
  retry: 0

pltcov-test:linux:ppc64:
  extends:
    - .test:all
    - .pltcov:linux:ppc64
  needs:
    - job: pltcov-build:linux
      parallel:
        matrix:
          - PLATFORM: linux-ppc64

pltcov-test:windows:386:
  extends:
    - .test:all
    - .pltcov:windows:386
  needs:
    - job: pltcov-build:windows
      parallel:
        matrix:
          - PLATFORM: windows-386
  parallel:
    matrix:
      - PIXMAN_ENABLE: ["mmx"]
        PIXMAN_DISABLE: ["sse2 ssse3"]
      - PIXMAN_ENABLE: ["sse2"]
        PIXMAN_DISABLE: ["mmx ssse3"]
      - PIXMAN_ENABLE: ["ssse3"]
        PIXMAN_DISABLE: ["mmx sse2"]

pltcov-test:windows:amd64:
  extends:
    - .test:all
    - .pltcov:windows:amd64
  needs:
    - job: pltcov-build:windows
      parallel:
        matrix:
          - PLATFORM: windows-amd64
  parallel:
    matrix:
      - PIXMAN_DISABLE:
        - ""
        - "fast"
        - "wholeops"
