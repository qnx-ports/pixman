# Platform templates
#
# Used to provide base for multi-arch runs. Each platform can be globally
# disabled with by modifying ACTIVE_CODE/PLT_PATTERN variables. Some targets
# have pre-defined `QEMU_CPU`, which is either the only or the default QEMU
# configuration for a given platform.
#
# There are two types of targets:
# - code – it is used to perform code coverage test.
# - plt – it is used to perform additional platform coverage test for
#   architectures, which don't have official Debian support, and don't increase
#   the code coverage.

.codecov:all:
  rules:
    - if: "$TARGET =~ $ACTIVE_TARGET_PATTERN"
  image:
    name: $DOCKER_IMAGE_NAME-$TARGET

# i386 is used for `mmx`, `sse2` and `ssse3` backend tests.
.codecov:linux:386:
  extends: .codecov:all
  # Waiting for https://gitlab.com/gitlab-org/gitlab/-/issues/423553
  needs:
    - job: docker-codecov
      optional: true
      parallel:
        matrix:
          - TARGET: linux-386
  variables:
    TARGET: linux-386

# amd64 is used for general tests.
.codecov:linux:amd64:
  extends: .codecov:all
  needs:
    - job: docker-codecov
      optional: true
      parallel:
        matrix:
          - TARGET: linux-amd64
  variables:
    TARGET: linux-amd64

# ARMv5 is used for `arm-simd` test.
.codecov:linux:arm:v5:
  extends: .codecov:all
  needs:
    - job: docker-codecov
      optional: true
      parallel:
        matrix:
          - TARGET: linux-arm-v5
  variables:
    TARGET: linux-arm-v5
    # It is in fact an ARMv6 CPU, which is required for SIMD to get discovered
    # on runtime.
    QEMU_CPU: arm1136

# ARMv7 is used for ARMv7 variant of `arm-neon`.
.codecov:linux:arm:v7:
  extends: .codecov:all
  needs:
    - job: docker-codecov
      optional: true
      parallel:
        matrix:
          - TARGET: linux-arm-v7
  variables:
    TARGET: linux-arm-v7

# ARM64v8 is used for `arm-neon`.
.codecov:linux:arm64:v8:
  extends: .codecov:all
  needs:
    - job: docker-codecov
      optional: true
      parallel:
        matrix:
          - TARGET: linux-arm64-v8
  variables:
    TARGET: linux-arm64-v8

# MIPS64EL used for `loongson-mmi`.
.codecov:linux:mips64el:
  extends: .codecov:all
  needs:
    - job: docker-codecov
      optional: true
      parallel:
        matrix:
          - TARGET: linux-mips64el
  variables:
    TARGET: linux-mips64el
    QEMU_CPU: "Loongson-3A4000"

# MIPS (32 bit, little endian) is used for `mips-dspr2`.
.codecov:linux:mipsel:
  extends: .codecov:all
  needs:
    - job: docker-codecov
      optional: true
      parallel:
        matrix:
          - TARGET: linux-mipsel
  variables:
    TARGET: linux-mipsel
    # As written in the code comment, it's the only supported CPU.
    QEMU_CPU: 74Kf

# PPC64LE used for `vmx`.
.codecov:linux:ppc64le:
  extends: .codecov:all
  needs:
    - job: docker-codecov
      optional: true
      parallel:
        matrix:
          - TARGET: linux-ppc64le
  variables:
    TARGET: linux-ppc64le

# RISCV64 used for `rvv`.
.codecov:linux:riscv64:
  extends: .codecov:all
  needs:
    - job: docker-codecov
      optional: true
      parallel:
        matrix:
          - TARGET: linux-riscv64
  variables:
    TARGET: linux-riscv64
    QEMU_CPU: rv64,v=true,vext_spec=v1.0,vlen=256,elen=64

# Platform coverage targets (Linux).

.pltcov:all:
  rules:
    - if: "$TARGET =~ $ACTIVE_TARGET_PATTERN"

.pltcov:linux:
  extends: .pltcov:all
  needs:
    - job: docker-pltcov:linux
      optional: true
  image:
    name: $DOCKER_IMAGE_NAME-pltcov-linux

# MIPS (32 bit, big endian) used for `mips-dspr2`.
.pltcov:linux:mips:
  extends: .pltcov:linux
  variables:
    TARGET: linux-mips

# PPC (32 bit, big endian) used for `vmx`.
.pltcov:linux:ppc:
  extends: .pltcov:linux
  variables:
    TARGET: linux-ppc

# PPC64 (64 bit, big endian) used for `vmx`.
.pltcov:linux:ppc64:
  extends: .pltcov:linux
  variables:
    TARGET: linux-ppc64

# Platform coverage targets (Windows).

.pltcov:windows:
  extends: .pltcov:all
  needs:
    - job: docker-pltcov:windows
      optional: true
  image:
    name: $DOCKER_IMAGE_NAME-pltcov-windows

# Windows i386
.pltcov:windows:386:
  extends: .pltcov:windows
  variables:
    TARGET: windows-386

# Windows amd64
.pltcov:windows:amd64:
  extends: .pltcov:windows
  variables:
    TARGET: windows-amd64
